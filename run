#!/usr/bin/env bash
# This file is the main start point for the project.
# Usage:
# run recipe_name
set -euo pipefail
current_script_directory="$(dirname "${BASH_SOURCE[0]}")"
source "$current_script_directory/.run/do"


# Launches archlive build
build-live-image() {

  # Gets rootfs_configure_script
  if [[ -n "${rootfs_configure_script:-}" ]]; then
    rootfs_configure_script=$(make_absolute_path "$rootfs_configure_script")
    assert_path_is_a_file "$rootfs_configure_script" \
      "Rootfs configure script isn't a file"

    build_options+=(
      "--rootfs_configure_script=$rootfs_configure_script"
    )
  fi

  # Gets kernel options
  if [[ -n "${kernel_options:-}" ]]; then
    build_options+=(
      "--kernel_options=$kernel_options"
    )
  fi

  # Builds live image
  earthly --allow-privileged +live-image "${build_options[@]}"
}


# Launches docker container interactive with live image controlled by tty
launch-interactive-tty() {
  assert_not_empty "${launch_interactive_image:-}" \
    "launch_interactive_image isn't set"
  assert_path_is_a_file "$launch_interactive_image" \
    "launch_interactive_image isn't a file"

  earthly --allow-privileged +launcher-image

  docker container run --privileged --rm -it \
    --env additional_qemu_flags=-nographic \
    -v "$(realpath "$launch_interactive_image")":/work/live.img \
    archlive/launcher
}


# Tests live image boot on qemu virtual machine
test-live-image-boot() {
  earthly --allow-privileged +test-live-image-boot
}

_run "$@"
